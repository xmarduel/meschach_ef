# Makefile.in generated by automake 1.10 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (c) 1994 - 2010, Lawrence Livermore National Security, LLC.
# LLNL-CODE-425250.
# All rights reserved.
# 
# This file is part of Silo. For details, see silo.llnl.gov.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the disclaimer below.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the disclaimer (as noted
#      below) in the documentation and/or other materials provided with
#      the distribution.
#    * Neither the name of the LLNS/LLNL nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
# 
# THIS SOFTWARE  IS PROVIDED BY  THE COPYRIGHT HOLDERS  AND CONTRIBUTORS
# "AS  IS" AND  ANY EXPRESS  OR IMPLIED  WARRANTIES, INCLUDING,  BUT NOT
# LIMITED TO, THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A  PARTICULAR  PURPOSE ARE  DISCLAIMED.  IN  NO  EVENT SHALL  LAWRENCE
# LIVERMORE  NATIONAL SECURITY, LLC,  THE U.S.  DEPARTMENT OF  ENERGY OR
# CONTRIBUTORS BE LIABLE FOR  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR  CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT  LIMITED TO,
# PROCUREMENT OF  SUBSTITUTE GOODS  OR SERVICES; LOSS  OF USE,  DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER  IN CONTRACT, STRICT LIABILITY,  OR TORT (INCLUDING
# NEGLIGENCE OR  OTHERWISE) ARISING IN  ANY WAY OUT  OF THE USE  OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# This work was produced at Lawrence Livermore National Laboratory under
# Contract No.  DE-AC52-07NA27344 with the DOE.
# 
# Neither the  United States Government nor  Lawrence Livermore National
# Security, LLC nor any of  their employees, makes any warranty, express
# or  implied,  or  assumes  any  liability or  responsibility  for  the
# accuracy, completeness,  or usefulness of  any information, apparatus,
# product, or  process disclosed, or  represents that its use  would not
# infringe privately-owned rights.
# 
# Any reference herein to  any specific commercial products, process, or
# services by trade name,  trademark, manufacturer or otherwise does not
# necessarily  constitute or imply  its endorsement,  recommendation, or
# favoring  by  the  United  States  Government  or  Lawrence  Livermore
# National Security,  LLC. The views  and opinions of  authors expressed
# herein do not necessarily state  or reflect those of the United States
# Government or Lawrence Livermore National Security, LLC, and shall not
# be used for advertising or product endorsement purposes.
#

# making use of the autotest features in autoconf
# 

# some example commands to compile ioperf plugins
# gcc -shared -I. ioperf_sec2.c -o libiop_sec2.so
# gcc -shared -I. ioperf_stdio.c -o libiop_stdio.so
# gcc -shared -I. -I/usr/gapps/silo/hdf5/1.8.1/i686_Linux_ELsmp/include ioperf_hdf5.c -o libiop_hdf5.so /usr/gapps/silo/hdf5/1.8.1/i686_Linux_ELsmp/lib/libhdf5.a


pkgdatadir = $(datadir)/silo
pkglibdir = $(libdir)/silo
pkgincludedir = $(includedir)/silo
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin10.5.0
host_triplet = i386-apple-darwin10.5.0
check_PROGRAMS = arbpoly2d$(EXEEXT) array$(EXEEXT) extface$(EXEEXT) \
	multi_test$(EXEEXT) partial_io$(EXEEXT) point$(EXEEXT) \
	group_test$(EXEEXT) listtypes$(EXEEXT) simple$(EXEEXT) \
	ucd$(EXEEXT) ucdsamp3$(EXEEXT) testall$(EXEEXT) \
	alltypes$(EXEEXT) obj$(EXEEXT) onehex$(EXEEXT) \
	oneprism$(EXEEXT) onepyramid$(EXEEXT) onetet$(EXEEXT) \
	TestReadMask$(EXEEXT) subhex$(EXEEXT) twohex$(EXEEXT) \
	multispec$(EXEEXT) specmix$(EXEEXT) testpdb$(EXEEXT) \
	sami$(EXEEXT) spec$(EXEEXT) cpz1plt$(EXEEXT) \
	merge_block$(EXEEXT) mat3d_3across$(EXEEXT) ucd1d$(EXEEXT) \
	wave$(EXEEXT) multi_file$(EXEEXT) polyzl$(EXEEXT) csg$(EXEEXT) \
	rocket$(EXEEXT) mmadjacency$(EXEEXT) largefile$(EXEEXT) \
	dir$(EXEEXT) quad$(EXEEXT) version$(EXEEXT) \
	namescheme$(EXEEXT) efcentering$(EXEEXT) mk_nasf_pdb$(EXEEXT) \
	ioperf$(EXEEXT) readstuff$(EXEEXT) $(am__EXEEXT_2) \
	$(am__EXEEXT_4)
#am__append_1 = $(HDF5PROGS)
#am__append_2 = $(HDF5PROGS)
#am__append_3 = $(FCPROGS)
#am__append_4 = $(FCPROGS)
subdir = tests
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__EXEEXT_1 = compression$(EXEEXT) grab$(EXEEXT)
#am__EXEEXT_2 = $(am__EXEEXT_1)
am__EXEEXT_3 = arrayf77$(EXEEXT) curvef77$(EXEEXT) matf77$(EXEEXT) \
	pointf77$(EXEEXT) quadf77$(EXEEXT) ucdf77$(EXEEXT) \
	testallf77$(EXEEXT)
#am__EXEEXT_4 = $(am__EXEEXT_3)
TestReadMask_SOURCES = TestReadMask.c
TestReadMask_OBJECTS = TestReadMask-TestReadMask.$(OBJEXT)
TestReadMask_LDADD = $(LDADD)
TestReadMask_DEPENDENCIES = ../src/libsilo.la
#TestReadMask_DEPENDENCIES = ../src/libsiloh5.la
alltypes_SOURCES = alltypes.c
alltypes_OBJECTS = alltypes.$(OBJEXT)
alltypes_LDADD = $(LDADD)
alltypes_DEPENDENCIES = ../src/libsilo.la
#alltypes_DEPENDENCIES = ../src/libsiloh5.la
arbpoly2d_SOURCES = arbpoly2d.c
arbpoly2d_OBJECTS = arbpoly2d.$(OBJEXT)
arbpoly2d_LDADD = $(LDADD)
arbpoly2d_DEPENDENCIES = ../src/libsilo.la
#arbpoly2d_DEPENDENCIES = ../src/libsiloh5.la
array_SOURCES = array.c
array_OBJECTS = array.$(OBJEXT)
array_LDADD = $(LDADD)
array_DEPENDENCIES = ../src/libsilo.la
#array_DEPENDENCIES = ../src/libsiloh5.la
am__arrayf77_SOURCES_DIST = arrayf77.f
#am_arrayf77_OBJECTS = arrayf77.$(OBJEXT)
arrayf77_OBJECTS = $(am_arrayf77_OBJECTS)
am__DEPENDENCIES_1 =
#arrayf77_DEPENDENCIES = $(LDADD) \
#	$(am__DEPENDENCIES_1)
am__compression_SOURCES_DIST = compression.c
#am_compression_OBJECTS = compression.$(OBJEXT)
compression_OBJECTS = $(am_compression_OBJECTS)
#compression_DEPENDENCIES = $(LDADD)
cpz1plt_SOURCES = cpz1plt.c
cpz1plt_OBJECTS = cpz1plt.$(OBJEXT)
cpz1plt_LDADD = $(LDADD)
cpz1plt_DEPENDENCIES = ../src/libsilo.la
#cpz1plt_DEPENDENCIES = ../src/libsiloh5.la
csg_SOURCES = csg.c
csg_OBJECTS = csg.$(OBJEXT)
csg_LDADD = $(LDADD)
csg_DEPENDENCIES = ../src/libsilo.la
#csg_DEPENDENCIES = ../src/libsiloh5.la
am__curvef77_SOURCES_DIST = curvef77.f
#am_curvef77_OBJECTS = curvef77.$(OBJEXT)
curvef77_OBJECTS = $(am_curvef77_OBJECTS)
#curvef77_DEPENDENCIES = $(LDADD) \
#	$(am__DEPENDENCIES_1)
am_dir_OBJECTS = dir.$(OBJEXT) testlib.$(OBJEXT)
dir_OBJECTS = $(am_dir_OBJECTS)
dir_LDADD = $(LDADD)
dir_DEPENDENCIES = ../src/libsilo.la
#dir_DEPENDENCIES = ../src/libsiloh5.la
efcentering_SOURCES = efcentering.c
efcentering_OBJECTS = efcentering.$(OBJEXT)
efcentering_LDADD = $(LDADD)
efcentering_DEPENDENCIES = ../src/libsilo.la
#efcentering_DEPENDENCIES = ../src/libsiloh5.la
extface_SOURCES = extface.c
extface_OBJECTS = extface.$(OBJEXT)
extface_LDADD = $(LDADD)
extface_DEPENDENCIES = ../src/libsilo.la
#extface_DEPENDENCIES = ../src/libsiloh5.la
am__grab_SOURCES_DIST = grab.c
#am_grab_OBJECTS = grab.$(OBJEXT)
grab_OBJECTS = $(am_grab_OBJECTS)
#grab_DEPENDENCIES = $(LDADD)
group_test_SOURCES = group_test.c
group_test_OBJECTS = group_test.$(OBJEXT)
group_test_LDADD = $(LDADD)
group_test_DEPENDENCIES = ../src/libsilo.la
#group_test_DEPENDENCIES = ../src/libsiloh5.la
ioperf_SOURCES = ioperf.c
ioperf_OBJECTS = ioperf.$(OBJEXT)
ioperf_DEPENDENCIES =
largefile_SOURCES = largefile.c
largefile_OBJECTS = largefile.$(OBJEXT)
largefile_LDADD = $(LDADD)
largefile_DEPENDENCIES = ../src/libsilo.la
#largefile_DEPENDENCIES = ../src/libsiloh5.la
listtypes_SOURCES = listtypes.c
listtypes_OBJECTS = listtypes.$(OBJEXT)
listtypes_LDADD = $(LDADD)
listtypes_DEPENDENCIES = ../src/libsilo.la
#listtypes_DEPENDENCIES = ../src/libsiloh5.la
mat3d_3across_SOURCES = mat3d_3across.c
mat3d_3across_OBJECTS = mat3d_3across.$(OBJEXT)
mat3d_3across_LDADD = $(LDADD)
mat3d_3across_DEPENDENCIES = ../src/libsilo.la
#mat3d_3across_DEPENDENCIES =  \
#	../src/libsiloh5.la
am__matf77_SOURCES_DIST = matf77.f
#am_matf77_OBJECTS = matf77.$(OBJEXT)
matf77_OBJECTS = $(am_matf77_OBJECTS)
#matf77_DEPENDENCIES = $(LDADD) \
#	$(am__DEPENDENCIES_1)
merge_block_SOURCES = merge_block.c
merge_block_OBJECTS = merge_block.$(OBJEXT)
merge_block_LDADD = $(LDADD)
merge_block_DEPENDENCIES = ../src/libsilo.la
#merge_block_DEPENDENCIES = ../src/libsiloh5.la
mk_nasf_pdb_SOURCES = mk_nasf_pdb.c
mk_nasf_pdb_OBJECTS = mk_nasf_pdb.$(OBJEXT)
mk_nasf_pdb_LDADD = $(LDADD)
mk_nasf_pdb_DEPENDENCIES = ../src/libsilo.la
#mk_nasf_pdb_DEPENDENCIES = ../src/libsiloh5.la
mmadjacency_SOURCES = mmadjacency.c
mmadjacency_OBJECTS = mmadjacency.$(OBJEXT)
mmadjacency_LDADD = $(LDADD)
mmadjacency_DEPENDENCIES = ../src/libsilo.la
#mmadjacency_DEPENDENCIES = ../src/libsiloh5.la
multi_file_SOURCES = multi_file.c
multi_file_OBJECTS = multi_file.$(OBJEXT)
multi_file_LDADD = $(LDADD)
multi_file_DEPENDENCIES = ../src/libsilo.la
#multi_file_DEPENDENCIES = ../src/libsiloh5.la
multi_test_SOURCES = multi_test.c
multi_test_OBJECTS = multi_test.$(OBJEXT)
multi_test_LDADD = $(LDADD)
multi_test_DEPENDENCIES = ../src/libsilo.la
#multi_test_DEPENDENCIES = ../src/libsiloh5.la
multispec_SOURCES = multispec.c
multispec_OBJECTS = multispec.$(OBJEXT)
multispec_LDADD = $(LDADD)
multispec_DEPENDENCIES = ../src/libsilo.la
#multispec_DEPENDENCIES = ../src/libsiloh5.la
namescheme_SOURCES = namescheme.c
namescheme_OBJECTS = namescheme.$(OBJEXT)
namescheme_LDADD = $(LDADD)
namescheme_DEPENDENCIES = ../src/libsilo.la
#namescheme_DEPENDENCIES = ../src/libsiloh5.la
obj_SOURCES = obj.c
obj_OBJECTS = obj.$(OBJEXT)
obj_LDADD = $(LDADD)
obj_DEPENDENCIES = ../src/libsilo.la
#obj_DEPENDENCIES = ../src/libsiloh5.la
onehex_SOURCES = onehex.c
onehex_OBJECTS = onehex.$(OBJEXT)
onehex_LDADD = $(LDADD)
onehex_DEPENDENCIES = ../src/libsilo.la
#onehex_DEPENDENCIES = ../src/libsiloh5.la
oneprism_SOURCES = oneprism.c
oneprism_OBJECTS = oneprism.$(OBJEXT)
oneprism_LDADD = $(LDADD)
oneprism_DEPENDENCIES = ../src/libsilo.la
#oneprism_DEPENDENCIES = ../src/libsiloh5.la
onepyramid_SOURCES = onepyramid.c
onepyramid_OBJECTS = onepyramid.$(OBJEXT)
onepyramid_LDADD = $(LDADD)
onepyramid_DEPENDENCIES = ../src/libsilo.la
#onepyramid_DEPENDENCIES = ../src/libsiloh5.la
onetet_SOURCES = onetet.c
onetet_OBJECTS = onetet.$(OBJEXT)
onetet_LDADD = $(LDADD)
onetet_DEPENDENCIES = ../src/libsilo.la
#onetet_DEPENDENCIES = ../src/libsiloh5.la
partial_io_SOURCES = partial_io.c
partial_io_OBJECTS = partial_io.$(OBJEXT)
partial_io_LDADD = $(LDADD)
partial_io_DEPENDENCIES = ../src/libsilo.la
#partial_io_DEPENDENCIES = ../src/libsiloh5.la
point_SOURCES = point.c
point_OBJECTS = point.$(OBJEXT)
point_LDADD = $(LDADD)
point_DEPENDENCIES = ../src/libsilo.la
#point_DEPENDENCIES = ../src/libsiloh5.la
am__pointf77_SOURCES_DIST = pointf77.f
#am_pointf77_OBJECTS = pointf77.$(OBJEXT)
pointf77_OBJECTS = $(am_pointf77_OBJECTS)
#pointf77_DEPENDENCIES = $(LDADD) \
#	$(am__DEPENDENCIES_1)
polyzl_SOURCES = polyzl.c
polyzl_OBJECTS = polyzl.$(OBJEXT)
polyzl_LDADD = $(LDADD)
polyzl_DEPENDENCIES = ../src/libsilo.la
#polyzl_DEPENDENCIES = ../src/libsiloh5.la
am_quad_OBJECTS = quad-quad.$(OBJEXT) quad-testlib.$(OBJEXT)
quad_OBJECTS = $(am_quad_OBJECTS)
quad_LDADD = $(LDADD)
quad_DEPENDENCIES = ../src/libsilo.la
#quad_DEPENDENCIES = ../src/libsiloh5.la
am__quadf77_SOURCES_DIST = quadf77.f
#am_quadf77_OBJECTS = quadf77.$(OBJEXT)
quadf77_OBJECTS = $(am_quadf77_OBJECTS)
#quadf77_DEPENDENCIES = $(LDADD) \
#	$(am__DEPENDENCIES_1)
readstuff_SOURCES = readstuff.c
readstuff_OBJECTS = readstuff.$(OBJEXT)
readstuff_LDADD = $(LDADD)
readstuff_DEPENDENCIES = ../src/libsilo.la
#readstuff_DEPENDENCIES = ../src/libsiloh5.la
am_rocket_OBJECTS = rocket.$(OBJEXT)
rocket_OBJECTS = $(am_rocket_OBJECTS)
rocket_LDADD = $(LDADD)
rocket_DEPENDENCIES = ../src/libsilo.la
#rocket_DEPENDENCIES = ../src/libsiloh5.la
sami_SOURCES = sami.c
sami_OBJECTS = sami.$(OBJEXT)
sami_LDADD = $(LDADD)
sami_DEPENDENCIES = ../src/libsilo.la
#sami_DEPENDENCIES = ../src/libsiloh5.la
simple_SOURCES = simple.c
simple_OBJECTS = simple.$(OBJEXT)
simple_LDADD = $(LDADD)
simple_DEPENDENCIES = ../src/libsilo.la
#simple_DEPENDENCIES = ../src/libsiloh5.la
spec_SOURCES = spec.c
spec_OBJECTS = spec.$(OBJEXT)
spec_LDADD = $(LDADD)
spec_DEPENDENCIES = ../src/libsilo.la
#spec_DEPENDENCIES = ../src/libsiloh5.la
specmix_SOURCES = specmix.c
specmix_OBJECTS = specmix.$(OBJEXT)
specmix_LDADD = $(LDADD)
specmix_DEPENDENCIES = ../src/libsilo.la
#specmix_DEPENDENCIES = ../src/libsiloh5.la
subhex_SOURCES = subhex.c
subhex_OBJECTS = subhex.$(OBJEXT)
subhex_LDADD = $(LDADD)
subhex_DEPENDENCIES = ../src/libsilo.la
#subhex_DEPENDENCIES = ../src/libsiloh5.la
testall_SOURCES = testall.c
testall_OBJECTS = testall.$(OBJEXT)
testall_LDADD = $(LDADD)
testall_DEPENDENCIES = ../src/libsilo.la
#testall_DEPENDENCIES = ../src/libsiloh5.la
am__testallf77_SOURCES_DIST = testallf77.f
#am_testallf77_OBJECTS = testallf77.$(OBJEXT)
testallf77_OBJECTS = $(am_testallf77_OBJECTS)
#testallf77_DEPENDENCIES = $(LDADD) \
#	$(am__DEPENDENCIES_1)
testpdb_SOURCES = testpdb.c
testpdb_OBJECTS = testpdb.$(OBJEXT)
testpdb_LDADD = $(LDADD)
testpdb_DEPENDENCIES = ../src/libsilo.la
#testpdb_DEPENDENCIES = ../src/libsiloh5.la
twohex_SOURCES = twohex.c
twohex_OBJECTS = twohex.$(OBJEXT)
twohex_LDADD = $(LDADD)
twohex_DEPENDENCIES = ../src/libsilo.la
#twohex_DEPENDENCIES = ../src/libsiloh5.la
ucd_SOURCES = ucd.c
ucd_OBJECTS = ucd.$(OBJEXT)
ucd_LDADD = $(LDADD)
ucd_DEPENDENCIES = ../src/libsilo.la
#ucd_DEPENDENCIES = ../src/libsiloh5.la
ucd1d_SOURCES = ucd1d.c
ucd1d_OBJECTS = ucd1d.$(OBJEXT)
ucd1d_LDADD = $(LDADD)
ucd1d_DEPENDENCIES = ../src/libsilo.la
#ucd1d_DEPENDENCIES = ../src/libsiloh5.la
am__ucdf77_SOURCES_DIST = ucdf77.f
#am_ucdf77_OBJECTS = ucdf77.$(OBJEXT)
ucdf77_OBJECTS = $(am_ucdf77_OBJECTS)
#ucdf77_DEPENDENCIES = $(LDADD) \
#	$(am__DEPENDENCIES_1)
ucdsamp3_SOURCES = ucdsamp3.c
ucdsamp3_OBJECTS = ucdsamp3.$(OBJEXT)
ucdsamp3_LDADD = $(LDADD)
ucdsamp3_DEPENDENCIES = ../src/libsilo.la
#ucdsamp3_DEPENDENCIES = ../src/libsiloh5.la
version_SOURCES = version.c
version_OBJECTS = version.$(OBJEXT)
version_LDADD = $(LDADD)
version_DEPENDENCIES = ../src/libsilo.la
#version_DEPENDENCIES = ../src/libsiloh5.la
wave_SOURCES = wave.c
wave_OBJECTS = wave.$(OBJEXT)
wave_LDADD = $(LDADD)
wave_DEPENDENCIES = ../src/libsilo.la
#wave_DEPENDENCIES = ../src/libsiloh5.la
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(LIBTOOL) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(nodist_EXTRA_TestReadMask_SOURCES) TestReadMask.c \
	$(nodist_EXTRA_alltypes_SOURCES) alltypes.c \
	$(nodist_EXTRA_arbpoly2d_SOURCES) arbpoly2d.c \
	$(nodist_EXTRA_array_SOURCES) array.c $(arrayf77_SOURCES) \
	$(nodist_EXTRA_arrayf77_SOURCES) $(compression_SOURCES) \
	$(nodist_EXTRA_compression_SOURCES) \
	$(nodist_EXTRA_cpz1plt_SOURCES) cpz1plt.c \
	$(nodist_EXTRA_csg_SOURCES) csg.c $(curvef77_SOURCES) \
	$(nodist_EXTRA_curvef77_SOURCES) $(dir_SOURCES) \
	$(nodist_EXTRA_dir_SOURCES) \
	$(nodist_EXTRA_efcentering_SOURCES) efcentering.c \
	$(nodist_EXTRA_extface_SOURCES) extface.c $(grab_SOURCES) \
	$(nodist_EXTRA_grab_SOURCES) \
	$(nodist_EXTRA_group_test_SOURCES) group_test.c \
	$(nodist_EXTRA_ioperf_SOURCES) ioperf.c \
	$(nodist_EXTRA_largefile_SOURCES) largefile.c \
	$(nodist_EXTRA_listtypes_SOURCES) listtypes.c \
	$(nodist_EXTRA_mat3d_3across_SOURCES) mat3d_3across.c \
	$(matf77_SOURCES) $(nodist_EXTRA_matf77_SOURCES) \
	$(nodist_EXTRA_merge_block_SOURCES) merge_block.c \
	$(nodist_EXTRA_mk_nasf_pdb_SOURCES) mk_nasf_pdb.c \
	$(nodist_EXTRA_mmadjacency_SOURCES) mmadjacency.c \
	$(nodist_EXTRA_multi_file_SOURCES) multi_file.c \
	$(nodist_EXTRA_multi_test_SOURCES) multi_test.c \
	$(nodist_EXTRA_multispec_SOURCES) multispec.c \
	$(nodist_EXTRA_namescheme_SOURCES) namescheme.c \
	$(nodist_EXTRA_obj_SOURCES) obj.c \
	$(nodist_EXTRA_onehex_SOURCES) onehex.c \
	$(nodist_EXTRA_oneprism_SOURCES) oneprism.c \
	$(nodist_EXTRA_onepyramid_SOURCES) onepyramid.c \
	$(nodist_EXTRA_onetet_SOURCES) onetet.c \
	$(nodist_EXTRA_partial_io_SOURCES) partial_io.c \
	$(nodist_EXTRA_point_SOURCES) point.c $(pointf77_SOURCES) \
	$(nodist_EXTRA_pointf77_SOURCES) \
	$(nodist_EXTRA_polyzl_SOURCES) polyzl.c $(quad_SOURCES) \
	$(nodist_EXTRA_quad_SOURCES) $(quadf77_SOURCES) \
	$(nodist_EXTRA_quadf77_SOURCES) \
	$(nodist_EXTRA_readstuff_SOURCES) readstuff.c \
	$(rocket_SOURCES) $(nodist_EXTRA_rocket_SOURCES) \
	$(nodist_EXTRA_sami_SOURCES) sami.c \
	$(nodist_EXTRA_simple_SOURCES) simple.c \
	$(nodist_EXTRA_spec_SOURCES) spec.c \
	$(nodist_EXTRA_specmix_SOURCES) specmix.c \
	$(nodist_EXTRA_subhex_SOURCES) subhex.c \
	$(nodist_EXTRA_testall_SOURCES) testall.c \
	$(testallf77_SOURCES) $(nodist_EXTRA_testallf77_SOURCES) \
	$(nodist_EXTRA_testpdb_SOURCES) testpdb.c \
	$(nodist_EXTRA_twohex_SOURCES) twohex.c \
	$(nodist_EXTRA_ucd_SOURCES) ucd.c \
	$(nodist_EXTRA_ucd1d_SOURCES) ucd1d.c $(ucdf77_SOURCES) \
	$(nodist_EXTRA_ucdf77_SOURCES) \
	$(nodist_EXTRA_ucdsamp3_SOURCES) ucdsamp3.c \
	$(nodist_EXTRA_version_SOURCES) version.c \
	$(nodist_EXTRA_wave_SOURCES) wave.c
DIST_SOURCES = TestReadMask.c alltypes.c arbpoly2d.c array.c \
	$(am__arrayf77_SOURCES_DIST) $(am__compression_SOURCES_DIST) \
	cpz1plt.c csg.c $(am__curvef77_SOURCES_DIST) $(dir_SOURCES) \
	efcentering.c extface.c $(am__grab_SOURCES_DIST) group_test.c \
	ioperf.c largefile.c listtypes.c mat3d_3across.c \
	$(am__matf77_SOURCES_DIST) merge_block.c mk_nasf_pdb.c \
	mmadjacency.c multi_file.c multi_test.c multispec.c \
	namescheme.c obj.c onehex.c oneprism.c onepyramid.c onetet.c \
	partial_io.c point.c $(am__pointf77_SOURCES_DIST) polyzl.c \
	$(quad_SOURCES) $(am__quadf77_SOURCES_DIST) readstuff.c \
	$(rocket_SOURCES) sami.c simple.c spec.c specmix.c subhex.c \
	testall.c $(am__testallf77_SOURCES_DIST) testpdb.c twohex.c \
	ucd.c ucd1d.c $(am__ucdf77_SOURCES_DIST) ucdsamp3.c version.c \
	wave.c
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(includedir)"
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/xavier/x_local/srcs/silo-4.8/config/missing --run aclocal-1.10
AMTAR = ${SHELL} /Users/xavier/x_local/srcs/silo-4.8/config/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/xavier/x_local/srcs/silo-4.8/config/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/xavier/x_local/srcs/silo-4.8/config/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/xavier/x_local/srcs/silo-4.8/config/missing --run automake-1.10
AWK = awk
BROWSER = browser
BUNDLE_TARGET = silo.app
CC = gcc-4.2 -arch x86_64
CCDEPMODE = depmode=gcc3
CC_FULLPATH = /usr/bin/gcc-4.2
CFLAGS = -O3 -fexceptions -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -Wdeclaration-after-statement
CONFIG_CMD = ./configure '--disable-fortran' 'CXX=g++-4.2 -arch x86_64' 'CC=gcc-4.2 -arch x86_64'
CONFIG_DATE = Thu Dec 23 22:59:31 CET 2010
CONFIG_USER = xavier@xamMacBookPro.local
CPP = gcc-4.2 -arch x86_64 -E
CPPFLAGS = 
CXX = g++-4.2 -arch x86_64
CXXCPP = g++-4.2 -arch x86_64 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -fexceptions
CXX_FULLPATH = /usr/bin/g++-4.2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = /bin/echo
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
F77 = g77
FC = 
FCFLAGS = 
FCLIBS = 
FC_FULLPATH = 
FFLAGS = -g -O2
FORTRAN = 
FPZIP = fpzip
GREP = /usr/bin/grep
HDF5_DRV = 
HZIP = hzip
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS =  -Wl,-headerpad_max_install_names
LIBOBJS = 
LIBS = -lz  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /Users/xavier/x_local/srcs/silo-4.8/config/missing --run makeinfo
MKDIR_P = ../config/install-sh -c -d
NETCDF = netcdf
OBJEXT = o
PACKAGE = silo
PACKAGE_BUGREPORT = visit-users@email.ornl.gov
PACKAGE_NAME = silo
PACKAGE_STRING = silo 4.8
PACKAGE_TARNAME = silo
PACKAGE_VERSION = 4.8
PATH_SEPARATOR = :
PDBP_DRV = 
PDB_DRV = pdb_drv
PRTDIAG = 
PYTHON = 
PYTHONMODULE = 
PYTHON_CPPFLAGS = 
PYTHON_EXEC_PREFIX = 
PYTHON_PLATFORM = 
PYTHON_PREFIX = 
PYTHON_VERSION = 2.5
QT_BIN = /bin
QT_CORE = QtCore.framework
QT_CORE_LIB = -framework QtCore
QT_CXXFLAGS = -I$(QT_INCLUDE) -I$(QT_INCLUDE)/Qt -I$(QT_INCLUDE)/QtCore -I$(QT_INCLUDE)/QtGui
QT_GUI = QtGui.framework
QT_GUI_LIB = -framework QtGui
QT_INCLUDE = /include
QT_LDFLAGS = -F$(QT_LIB) -L$(QT_LIB)
QT_LIB = /lib
QT_LIBS = $(QT_CORE_LIB) $(QT_GUI_LIB)
QT_MOC = $(QT_BIN)/moc
RANLIB = ranlib
READLINE_LIBS = -lreadline 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SILEX = 
SILO_DTYPPTR = void
SILO_DTYPPTR1 = void*
SILO_DTYPPTR2 = void*
SILO_VERS_MAJ = 4
SILO_VERS_MIN = 8
SILO_VERS_PAT = 
SILO_VERS_PRE = 
SILO_VERS_TAG = Silo_version_4_8
STRIP = strip
TAURUS = taurus
VERSION = 4.8
ZLIB = zlib
abs_builddir = /Users/xavier/x_local/srcs/silo-4.8/tests
abs_srcdir = /Users/xavier/x_local/srcs/silo-4.8/tests
abs_top_builddir = /Users/xavier/x_local/srcs/silo-4.8
abs_top_srcdir = /Users/xavier/x_local/srcs/silo-4.8
ac_ct_CC = gcc-4.2 -arch x86_64
ac_ct_CXX = 
ac_ct_F77 = g77
ac_ct_FC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin10.5.0
build_alias = 
build_cpu = i386
build_os = darwin10.5.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i386-apple-darwin10.5.0
host_alias = 
host_cpu = i386
host_os = darwin10.5.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Users/xavier/x_local/srcs/silo-4.8/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/config/install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = 
pkgpythondir = 
prefix = /Users/xavier/x_local/srcs/silo-4.8
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = 
pythondir = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
EXTRA_DIST = \
 package.m4 \
 pdbcmp.csh \
 testsuite.at \
 testsuite \
 pmpio_hdf5_test.c \
 pmpio_silo_test_mesh.c \
 add_amr_mrgtree.c \
 amr3d.silo \
 amr2d.silo \
 amr2d_mesh_config.xml \
 amr3d_mesh_config.xml \
 not_a_silo_file.h5 \
 not_a_silo_file.pdb \
 ioperf_sec2.c \
 ioperf_stdio.c \
 ioperf_hdf5.c \
 ioperf_pdb.c \
 ioperf_silo.c \
 Make_ioperf \
 ioperf_tests \
 std.c \
 $(check_SCRIPTS) \
 $(check_DATA)

include_HEADERS = \
 ioperf.h


# Note: use top entry in check_SCRIPTS as sole target to
# copy all scripts and data in one rule
check_SCRIPTS = \
 checksums \
 testhzip \
 testxvers \
 test_error.py \
 test_read.py \
 test_write.py \
 testsilock \
 testdtypes

check_DATA = \
 xvers_data.tar.bz2 \
 pion0244.silo

DISTCLEANFILES = atconfig
AUTOM4TE = autom4te
AUTOTEST = $(AUTOM4TE) --language=autotest
TESTSUITE = $(srcdir)/testsuite
LDADD = ../src/libsilo.la
#LDADD = ../src/libsiloh5.la

# paths look at install directories before sources
AM_CPPFLAGS = \
 -I$(srcdir)/../src/pdb \
 -I$(srcdir)/../src/score \
 -I$(builddir)/../src/silo \
 -I$(srcdir)/../src/silo \
 -I$(includedir)

quad_CPPFLAGS = $(AM_CPPFLAGS)
TestReadMask_CPPFLAGS = $(AM_CPPFLAGS)
AM_FFLAGS = $(AM_CPPFLAGS)
HDF5PROGS = compression grab
FCPROGS = arrayf77 curvef77 matf77 pointf77 quadf77 ucdf77 testallf77
PROGS = array dir extface multi_test partial_io point quad simple ucd \
	ucdsamp3 testall obj onehex oneprism onepyramid onetet subhex \
	TestReadMask twohex multispec sami specmix spec cpz1plt spec \
	cpz1plt group_test listtypes alltypes wave multi_file polyzl \
	csg rocket mmadjacency largefile version namescheme \
	efcentering mk_nasf_pdb ioperf arbpoly2d readstuff \
	$(am__append_1) $(am__append_3)
dir_SOURCES = \
 dir.c \
 testlib.c

quad_SOURCES = \
 quad.c \
 testlib.c

rocket_SOURCES = \
 rocket.cpp


# Deal with need to use c++ linker whenever we've got C++
# sources compiled with the silo library and the fact that
# Automake/gmake won't let me just say LINK=$(CXXLINK). 
# This is a hack to force c++ linkage when we have
# c++ code compiled into Silo. I got this hack from
# automake manaual.
nodist_EXTRA_arbpoly2d_SOURCES = dummy.cxx
nodist_EXTRA_array_SOURCES = dummy.cxx
nodist_EXTRA_extface_SOURCES = dummy.cxx
nodist_EXTRA_multi_test_SOURCES = dummy.cxx
nodist_EXTRA_partial_io_SOURCES = dummy.cxx
nodist_EXTRA_point_SOURCES = dummy.cxx
nodist_EXTRA_group_test_SOURCES = dummy.cxx
nodist_EXTRA_listtypes_SOURCES = dummy.cxx
nodist_EXTRA_simple_SOURCES = dummy.cxx
nodist_EXTRA_ucd_SOURCES = dummy.cxx
nodist_EXTRA_ucdsamp3_SOURCES = dummy.cxx
nodist_EXTRA_testall_SOURCES = dummy.cxx
nodist_EXTRA_alltypes_SOURCES = dummy.cxx
nodist_EXTRA_obj_SOURCES = dummy.cxx
nodist_EXTRA_onehex_SOURCES = dummy.cxx
nodist_EXTRA_oneprism_SOURCES = dummy.cxx
nodist_EXTRA_onepyramid_SOURCES = dummy.cxx
nodist_EXTRA_onetet_SOURCES = dummy.cxx
nodist_EXTRA_TestReadMask_SOURCES = dummy.cxx
nodist_EXTRA_subhex_SOURCES = dummy.cxx
nodist_EXTRA_twohex_SOURCES = dummy.cxx
nodist_EXTRA_multispec_SOURCES = dummy.cxx
nodist_EXTRA_specmix_SOURCES = dummy.cxx
nodist_EXTRA_testpdb_SOURCES = dummy.cxx
nodist_EXTRA_sami_SOURCES = dummy.cxx
nodist_EXTRA_spec_SOURCES = dummy.cxx
nodist_EXTRA_cpz1plt_SOURCES = dummy.cxx
nodist_EXTRA_merge_block_SOURCES = dummy.cxx
nodist_EXTRA_mat3d_3across_SOURCES = dummy.cxx
nodist_EXTRA_ucd1d_SOURCES = dummy.cxx
nodist_EXTRA_wave_SOURCES = dummy.cxx
nodist_EXTRA_multi_file_SOURCES = dummy.cxx
nodist_EXTRA_polyzl_SOURCES = dummy.cxx
nodist_EXTRA_csg_SOURCES = dummy.cxx
nodist_EXTRA_rocket_SOURCES = dummy.cxx
nodist_EXTRA_mmadjacency_SOURCES = dummy.cxx
nodist_EXTRA_largefile_SOURCES = dummy.cxx
nodist_EXTRA_dir_SOURCES = dummy.cxx
nodist_EXTRA_quad_SOURCES = dummy.cxx
nodist_EXTRA_version_SOURCES = dummy.cxx
nodist_EXTRA_namescheme_SOURCES = dummy.cxx
nodist_EXTRA_arrayf77_SOURCES = dummy.cxx
nodist_EXTRA_curvef77_SOURCES = dummy.cxx
nodist_EXTRA_matf77_SOURCES = dummy.cxx
nodist_EXTRA_pointf77_SOURCES = dummy.cxx
nodist_EXTRA_quadf77_SOURCES = dummy.cxx
nodist_EXTRA_ucdf77_SOURCES = dummy.cxx
nodist_EXTRA_testallf77_SOURCES = dummy.cxx
nodist_EXTRA_compression_SOURCES = dummy.cxx
nodist_EXTRA_grab_SOURCES = dummy.cxx
nodist_EXTRA_efcentering_SOURCES = dummy.cxx
nodist_EXTRA_mk_nasf_pdb_SOURCES = dummy.cxx
nodist_EXTRA_ioperf_SOURCES = dummy.cxx
nodist_EXTRA_readstuff_SOURCES = dummy.cxx
ioperf_LDADD = -ldl
#compression_SOURCES = compression.c
#compression_LDADD = $(LDADD)
#grab_SOURCES = grab.c
#grab_LDADD = $(LDADD)
#arrayf77_SOURCES = arrayf77.f
#arrayf77_LDADD = $(LDADD) $(FCLIBS)
#curvef77_SOURCES = curvef77.f
#curvef77_LDADD = $(LDADD) $(FCLIBS)
#matf77_SOURCES = matf77.f
#matf77_LDADD = $(LDADD) $(FCLIBS)
#pointf77_SOURCES = pointf77.f
#pointf77_LDADD = $(LDADD) $(FCLIBS)
#quadf77_SOURCES = quadf77.f
#quadf77_LDADD = $(LDADD) $(FCLIBS)
#ucdf77_SOURCES = ucdf77.f
#ucdf77_LDADD = $(LDADD) $(FCLIBS)
#testallf77_SOURCES = testallf77.f
#testallf77_LDADD = $(LDADD) $(FCLIBS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .cxx .f .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  tests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
TestReadMask$(EXEEXT): $(TestReadMask_OBJECTS) $(TestReadMask_DEPENDENCIES) 
	@rm -f TestReadMask$(EXEEXT)
	$(CXXLINK) $(TestReadMask_OBJECTS) $(TestReadMask_LDADD) $(LIBS)
alltypes$(EXEEXT): $(alltypes_OBJECTS) $(alltypes_DEPENDENCIES) 
	@rm -f alltypes$(EXEEXT)
	$(CXXLINK) $(alltypes_OBJECTS) $(alltypes_LDADD) $(LIBS)
arbpoly2d$(EXEEXT): $(arbpoly2d_OBJECTS) $(arbpoly2d_DEPENDENCIES) 
	@rm -f arbpoly2d$(EXEEXT)
	$(CXXLINK) $(arbpoly2d_OBJECTS) $(arbpoly2d_LDADD) $(LIBS)
array$(EXEEXT): $(array_OBJECTS) $(array_DEPENDENCIES) 
	@rm -f array$(EXEEXT)
	$(CXXLINK) $(array_OBJECTS) $(array_LDADD) $(LIBS)
arrayf77$(EXEEXT): $(arrayf77_OBJECTS) $(arrayf77_DEPENDENCIES) 
	@rm -f arrayf77$(EXEEXT)
	$(CXXLINK) $(arrayf77_OBJECTS) $(arrayf77_LDADD) $(LIBS)
compression$(EXEEXT): $(compression_OBJECTS) $(compression_DEPENDENCIES) 
	@rm -f compression$(EXEEXT)
	$(CXXLINK) $(compression_OBJECTS) $(compression_LDADD) $(LIBS)
cpz1plt$(EXEEXT): $(cpz1plt_OBJECTS) $(cpz1plt_DEPENDENCIES) 
	@rm -f cpz1plt$(EXEEXT)
	$(CXXLINK) $(cpz1plt_OBJECTS) $(cpz1plt_LDADD) $(LIBS)
csg$(EXEEXT): $(csg_OBJECTS) $(csg_DEPENDENCIES) 
	@rm -f csg$(EXEEXT)
	$(CXXLINK) $(csg_OBJECTS) $(csg_LDADD) $(LIBS)
curvef77$(EXEEXT): $(curvef77_OBJECTS) $(curvef77_DEPENDENCIES) 
	@rm -f curvef77$(EXEEXT)
	$(CXXLINK) $(curvef77_OBJECTS) $(curvef77_LDADD) $(LIBS)
dir$(EXEEXT): $(dir_OBJECTS) $(dir_DEPENDENCIES) 
	@rm -f dir$(EXEEXT)
	$(CXXLINK) $(dir_OBJECTS) $(dir_LDADD) $(LIBS)
efcentering$(EXEEXT): $(efcentering_OBJECTS) $(efcentering_DEPENDENCIES) 
	@rm -f efcentering$(EXEEXT)
	$(CXXLINK) $(efcentering_OBJECTS) $(efcentering_LDADD) $(LIBS)
extface$(EXEEXT): $(extface_OBJECTS) $(extface_DEPENDENCIES) 
	@rm -f extface$(EXEEXT)
	$(CXXLINK) $(extface_OBJECTS) $(extface_LDADD) $(LIBS)
grab$(EXEEXT): $(grab_OBJECTS) $(grab_DEPENDENCIES) 
	@rm -f grab$(EXEEXT)
	$(CXXLINK) $(grab_OBJECTS) $(grab_LDADD) $(LIBS)
group_test$(EXEEXT): $(group_test_OBJECTS) $(group_test_DEPENDENCIES) 
	@rm -f group_test$(EXEEXT)
	$(CXXLINK) $(group_test_OBJECTS) $(group_test_LDADD) $(LIBS)
ioperf$(EXEEXT): $(ioperf_OBJECTS) $(ioperf_DEPENDENCIES) 
	@rm -f ioperf$(EXEEXT)
	$(CXXLINK) $(ioperf_OBJECTS) $(ioperf_LDADD) $(LIBS)
largefile$(EXEEXT): $(largefile_OBJECTS) $(largefile_DEPENDENCIES) 
	@rm -f largefile$(EXEEXT)
	$(CXXLINK) $(largefile_OBJECTS) $(largefile_LDADD) $(LIBS)
listtypes$(EXEEXT): $(listtypes_OBJECTS) $(listtypes_DEPENDENCIES) 
	@rm -f listtypes$(EXEEXT)
	$(CXXLINK) $(listtypes_OBJECTS) $(listtypes_LDADD) $(LIBS)
mat3d_3across$(EXEEXT): $(mat3d_3across_OBJECTS) $(mat3d_3across_DEPENDENCIES) 
	@rm -f mat3d_3across$(EXEEXT)
	$(CXXLINK) $(mat3d_3across_OBJECTS) $(mat3d_3across_LDADD) $(LIBS)
matf77$(EXEEXT): $(matf77_OBJECTS) $(matf77_DEPENDENCIES) 
	@rm -f matf77$(EXEEXT)
	$(CXXLINK) $(matf77_OBJECTS) $(matf77_LDADD) $(LIBS)
merge_block$(EXEEXT): $(merge_block_OBJECTS) $(merge_block_DEPENDENCIES) 
	@rm -f merge_block$(EXEEXT)
	$(CXXLINK) $(merge_block_OBJECTS) $(merge_block_LDADD) $(LIBS)
mk_nasf_pdb$(EXEEXT): $(mk_nasf_pdb_OBJECTS) $(mk_nasf_pdb_DEPENDENCIES) 
	@rm -f mk_nasf_pdb$(EXEEXT)
	$(CXXLINK) $(mk_nasf_pdb_OBJECTS) $(mk_nasf_pdb_LDADD) $(LIBS)
mmadjacency$(EXEEXT): $(mmadjacency_OBJECTS) $(mmadjacency_DEPENDENCIES) 
	@rm -f mmadjacency$(EXEEXT)
	$(CXXLINK) $(mmadjacency_OBJECTS) $(mmadjacency_LDADD) $(LIBS)
multi_file$(EXEEXT): $(multi_file_OBJECTS) $(multi_file_DEPENDENCIES) 
	@rm -f multi_file$(EXEEXT)
	$(CXXLINK) $(multi_file_OBJECTS) $(multi_file_LDADD) $(LIBS)
multi_test$(EXEEXT): $(multi_test_OBJECTS) $(multi_test_DEPENDENCIES) 
	@rm -f multi_test$(EXEEXT)
	$(CXXLINK) $(multi_test_OBJECTS) $(multi_test_LDADD) $(LIBS)
multispec$(EXEEXT): $(multispec_OBJECTS) $(multispec_DEPENDENCIES) 
	@rm -f multispec$(EXEEXT)
	$(CXXLINK) $(multispec_OBJECTS) $(multispec_LDADD) $(LIBS)
namescheme$(EXEEXT): $(namescheme_OBJECTS) $(namescheme_DEPENDENCIES) 
	@rm -f namescheme$(EXEEXT)
	$(CXXLINK) $(namescheme_OBJECTS) $(namescheme_LDADD) $(LIBS)
obj$(EXEEXT): $(obj_OBJECTS) $(obj_DEPENDENCIES) 
	@rm -f obj$(EXEEXT)
	$(CXXLINK) $(obj_OBJECTS) $(obj_LDADD) $(LIBS)
onehex$(EXEEXT): $(onehex_OBJECTS) $(onehex_DEPENDENCIES) 
	@rm -f onehex$(EXEEXT)
	$(CXXLINK) $(onehex_OBJECTS) $(onehex_LDADD) $(LIBS)
oneprism$(EXEEXT): $(oneprism_OBJECTS) $(oneprism_DEPENDENCIES) 
	@rm -f oneprism$(EXEEXT)
	$(CXXLINK) $(oneprism_OBJECTS) $(oneprism_LDADD) $(LIBS)
onepyramid$(EXEEXT): $(onepyramid_OBJECTS) $(onepyramid_DEPENDENCIES) 
	@rm -f onepyramid$(EXEEXT)
	$(CXXLINK) $(onepyramid_OBJECTS) $(onepyramid_LDADD) $(LIBS)
onetet$(EXEEXT): $(onetet_OBJECTS) $(onetet_DEPENDENCIES) 
	@rm -f onetet$(EXEEXT)
	$(CXXLINK) $(onetet_OBJECTS) $(onetet_LDADD) $(LIBS)
partial_io$(EXEEXT): $(partial_io_OBJECTS) $(partial_io_DEPENDENCIES) 
	@rm -f partial_io$(EXEEXT)
	$(CXXLINK) $(partial_io_OBJECTS) $(partial_io_LDADD) $(LIBS)
point$(EXEEXT): $(point_OBJECTS) $(point_DEPENDENCIES) 
	@rm -f point$(EXEEXT)
	$(CXXLINK) $(point_OBJECTS) $(point_LDADD) $(LIBS)
pointf77$(EXEEXT): $(pointf77_OBJECTS) $(pointf77_DEPENDENCIES) 
	@rm -f pointf77$(EXEEXT)
	$(CXXLINK) $(pointf77_OBJECTS) $(pointf77_LDADD) $(LIBS)
polyzl$(EXEEXT): $(polyzl_OBJECTS) $(polyzl_DEPENDENCIES) 
	@rm -f polyzl$(EXEEXT)
	$(CXXLINK) $(polyzl_OBJECTS) $(polyzl_LDADD) $(LIBS)
quad$(EXEEXT): $(quad_OBJECTS) $(quad_DEPENDENCIES) 
	@rm -f quad$(EXEEXT)
	$(CXXLINK) $(quad_OBJECTS) $(quad_LDADD) $(LIBS)
quadf77$(EXEEXT): $(quadf77_OBJECTS) $(quadf77_DEPENDENCIES) 
	@rm -f quadf77$(EXEEXT)
	$(CXXLINK) $(quadf77_OBJECTS) $(quadf77_LDADD) $(LIBS)
readstuff$(EXEEXT): $(readstuff_OBJECTS) $(readstuff_DEPENDENCIES) 
	@rm -f readstuff$(EXEEXT)
	$(CXXLINK) $(readstuff_OBJECTS) $(readstuff_LDADD) $(LIBS)
rocket$(EXEEXT): $(rocket_OBJECTS) $(rocket_DEPENDENCIES) 
	@rm -f rocket$(EXEEXT)
	$(CXXLINK) $(rocket_OBJECTS) $(rocket_LDADD) $(LIBS)
sami$(EXEEXT): $(sami_OBJECTS) $(sami_DEPENDENCIES) 
	@rm -f sami$(EXEEXT)
	$(CXXLINK) $(sami_OBJECTS) $(sami_LDADD) $(LIBS)
simple$(EXEEXT): $(simple_OBJECTS) $(simple_DEPENDENCIES) 
	@rm -f simple$(EXEEXT)
	$(CXXLINK) $(simple_OBJECTS) $(simple_LDADD) $(LIBS)
spec$(EXEEXT): $(spec_OBJECTS) $(spec_DEPENDENCIES) 
	@rm -f spec$(EXEEXT)
	$(CXXLINK) $(spec_OBJECTS) $(spec_LDADD) $(LIBS)
specmix$(EXEEXT): $(specmix_OBJECTS) $(specmix_DEPENDENCIES) 
	@rm -f specmix$(EXEEXT)
	$(CXXLINK) $(specmix_OBJECTS) $(specmix_LDADD) $(LIBS)
subhex$(EXEEXT): $(subhex_OBJECTS) $(subhex_DEPENDENCIES) 
	@rm -f subhex$(EXEEXT)
	$(CXXLINK) $(subhex_OBJECTS) $(subhex_LDADD) $(LIBS)
testall$(EXEEXT): $(testall_OBJECTS) $(testall_DEPENDENCIES) 
	@rm -f testall$(EXEEXT)
	$(CXXLINK) $(testall_OBJECTS) $(testall_LDADD) $(LIBS)
testallf77$(EXEEXT): $(testallf77_OBJECTS) $(testallf77_DEPENDENCIES) 
	@rm -f testallf77$(EXEEXT)
	$(CXXLINK) $(testallf77_OBJECTS) $(testallf77_LDADD) $(LIBS)
testpdb$(EXEEXT): $(testpdb_OBJECTS) $(testpdb_DEPENDENCIES) 
	@rm -f testpdb$(EXEEXT)
	$(CXXLINK) $(testpdb_OBJECTS) $(testpdb_LDADD) $(LIBS)
twohex$(EXEEXT): $(twohex_OBJECTS) $(twohex_DEPENDENCIES) 
	@rm -f twohex$(EXEEXT)
	$(CXXLINK) $(twohex_OBJECTS) $(twohex_LDADD) $(LIBS)
ucd$(EXEEXT): $(ucd_OBJECTS) $(ucd_DEPENDENCIES) 
	@rm -f ucd$(EXEEXT)
	$(CXXLINK) $(ucd_OBJECTS) $(ucd_LDADD) $(LIBS)
ucd1d$(EXEEXT): $(ucd1d_OBJECTS) $(ucd1d_DEPENDENCIES) 
	@rm -f ucd1d$(EXEEXT)
	$(CXXLINK) $(ucd1d_OBJECTS) $(ucd1d_LDADD) $(LIBS)
ucdf77$(EXEEXT): $(ucdf77_OBJECTS) $(ucdf77_DEPENDENCIES) 
	@rm -f ucdf77$(EXEEXT)
	$(CXXLINK) $(ucdf77_OBJECTS) $(ucdf77_LDADD) $(LIBS)
ucdsamp3$(EXEEXT): $(ucdsamp3_OBJECTS) $(ucdsamp3_DEPENDENCIES) 
	@rm -f ucdsamp3$(EXEEXT)
	$(CXXLINK) $(ucdsamp3_OBJECTS) $(ucdsamp3_LDADD) $(LIBS)
version$(EXEEXT): $(version_OBJECTS) $(version_DEPENDENCIES) 
	@rm -f version$(EXEEXT)
	$(CXXLINK) $(version_OBJECTS) $(version_LDADD) $(LIBS)
wave$(EXEEXT): $(wave_OBJECTS) $(wave_DEPENDENCIES) 
	@rm -f wave$(EXEEXT)
	$(CXXLINK) $(wave_OBJECTS) $(wave_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/TestReadMask-TestReadMask.Po
include ./$(DEPDIR)/TestReadMask-dummy.Po
include ./$(DEPDIR)/alltypes.Po
include ./$(DEPDIR)/arbpoly2d.Po
include ./$(DEPDIR)/array.Po
include ./$(DEPDIR)/compression.Po
include ./$(DEPDIR)/cpz1plt.Po
include ./$(DEPDIR)/csg.Po
include ./$(DEPDIR)/dir.Po
include ./$(DEPDIR)/dummy.Po
include ./$(DEPDIR)/efcentering.Po
include ./$(DEPDIR)/extface.Po
include ./$(DEPDIR)/grab.Po
include ./$(DEPDIR)/group_test.Po
include ./$(DEPDIR)/ioperf.Po
include ./$(DEPDIR)/largefile.Po
include ./$(DEPDIR)/listtypes.Po
include ./$(DEPDIR)/mat3d_3across.Po
include ./$(DEPDIR)/merge_block.Po
include ./$(DEPDIR)/mk_nasf_pdb.Po
include ./$(DEPDIR)/mmadjacency.Po
include ./$(DEPDIR)/multi_file.Po
include ./$(DEPDIR)/multi_test.Po
include ./$(DEPDIR)/multispec.Po
include ./$(DEPDIR)/namescheme.Po
include ./$(DEPDIR)/obj.Po
include ./$(DEPDIR)/onehex.Po
include ./$(DEPDIR)/oneprism.Po
include ./$(DEPDIR)/onepyramid.Po
include ./$(DEPDIR)/onetet.Po
include ./$(DEPDIR)/partial_io.Po
include ./$(DEPDIR)/point.Po
include ./$(DEPDIR)/polyzl.Po
include ./$(DEPDIR)/quad-dummy.Po
include ./$(DEPDIR)/quad-quad.Po
include ./$(DEPDIR)/quad-testlib.Po
include ./$(DEPDIR)/readstuff.Po
include ./$(DEPDIR)/rocket.Po
include ./$(DEPDIR)/sami.Po
include ./$(DEPDIR)/simple.Po
include ./$(DEPDIR)/spec.Po
include ./$(DEPDIR)/specmix.Po
include ./$(DEPDIR)/subhex.Po
include ./$(DEPDIR)/testall.Po
include ./$(DEPDIR)/testlib.Po
include ./$(DEPDIR)/testpdb.Po
include ./$(DEPDIR)/twohex.Po
include ./$(DEPDIR)/ucd.Po
include ./$(DEPDIR)/ucd1d.Po
include ./$(DEPDIR)/ucdsamp3.Po
include ./$(DEPDIR)/version.Po
include ./$(DEPDIR)/wave.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

TestReadMask-TestReadMask.o: TestReadMask.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(TestReadMask_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT TestReadMask-TestReadMask.o -MD -MP -MF $(DEPDIR)/TestReadMask-TestReadMask.Tpo -c -o TestReadMask-TestReadMask.o `test -f 'TestReadMask.c' || echo '$(srcdir)/'`TestReadMask.c
	mv -f $(DEPDIR)/TestReadMask-TestReadMask.Tpo $(DEPDIR)/TestReadMask-TestReadMask.Po
#	source='TestReadMask.c' object='TestReadMask-TestReadMask.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(TestReadMask_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o TestReadMask-TestReadMask.o `test -f 'TestReadMask.c' || echo '$(srcdir)/'`TestReadMask.c

TestReadMask-TestReadMask.obj: TestReadMask.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(TestReadMask_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT TestReadMask-TestReadMask.obj -MD -MP -MF $(DEPDIR)/TestReadMask-TestReadMask.Tpo -c -o TestReadMask-TestReadMask.obj `if test -f 'TestReadMask.c'; then $(CYGPATH_W) 'TestReadMask.c'; else $(CYGPATH_W) '$(srcdir)/TestReadMask.c'; fi`
	mv -f $(DEPDIR)/TestReadMask-TestReadMask.Tpo $(DEPDIR)/TestReadMask-TestReadMask.Po
#	source='TestReadMask.c' object='TestReadMask-TestReadMask.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(TestReadMask_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o TestReadMask-TestReadMask.obj `if test -f 'TestReadMask.c'; then $(CYGPATH_W) 'TestReadMask.c'; else $(CYGPATH_W) '$(srcdir)/TestReadMask.c'; fi`

quad-quad.o: quad.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(quad_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT quad-quad.o -MD -MP -MF $(DEPDIR)/quad-quad.Tpo -c -o quad-quad.o `test -f 'quad.c' || echo '$(srcdir)/'`quad.c
	mv -f $(DEPDIR)/quad-quad.Tpo $(DEPDIR)/quad-quad.Po
#	source='quad.c' object='quad-quad.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(quad_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o quad-quad.o `test -f 'quad.c' || echo '$(srcdir)/'`quad.c

quad-quad.obj: quad.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(quad_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT quad-quad.obj -MD -MP -MF $(DEPDIR)/quad-quad.Tpo -c -o quad-quad.obj `if test -f 'quad.c'; then $(CYGPATH_W) 'quad.c'; else $(CYGPATH_W) '$(srcdir)/quad.c'; fi`
	mv -f $(DEPDIR)/quad-quad.Tpo $(DEPDIR)/quad-quad.Po
#	source='quad.c' object='quad-quad.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(quad_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o quad-quad.obj `if test -f 'quad.c'; then $(CYGPATH_W) 'quad.c'; else $(CYGPATH_W) '$(srcdir)/quad.c'; fi`

quad-testlib.o: testlib.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(quad_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT quad-testlib.o -MD -MP -MF $(DEPDIR)/quad-testlib.Tpo -c -o quad-testlib.o `test -f 'testlib.c' || echo '$(srcdir)/'`testlib.c
	mv -f $(DEPDIR)/quad-testlib.Tpo $(DEPDIR)/quad-testlib.Po
#	source='testlib.c' object='quad-testlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(quad_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o quad-testlib.o `test -f 'testlib.c' || echo '$(srcdir)/'`testlib.c

quad-testlib.obj: testlib.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(quad_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT quad-testlib.obj -MD -MP -MF $(DEPDIR)/quad-testlib.Tpo -c -o quad-testlib.obj `if test -f 'testlib.c'; then $(CYGPATH_W) 'testlib.c'; else $(CYGPATH_W) '$(srcdir)/testlib.c'; fi`
	mv -f $(DEPDIR)/quad-testlib.Tpo $(DEPDIR)/quad-testlib.Po
#	source='testlib.c' object='quad-testlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(quad_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o quad-testlib.obj `if test -f 'testlib.c'; then $(CYGPATH_W) 'testlib.c'; else $(CYGPATH_W) '$(srcdir)/testlib.c'; fi`

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

TestReadMask-dummy.o: dummy.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(TestReadMask_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TestReadMask-dummy.o -MD -MP -MF $(DEPDIR)/TestReadMask-dummy.Tpo -c -o TestReadMask-dummy.o `test -f 'dummy.cxx' || echo '$(srcdir)/'`dummy.cxx
	mv -f $(DEPDIR)/TestReadMask-dummy.Tpo $(DEPDIR)/TestReadMask-dummy.Po
#	source='dummy.cxx' object='TestReadMask-dummy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(TestReadMask_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TestReadMask-dummy.o `test -f 'dummy.cxx' || echo '$(srcdir)/'`dummy.cxx

TestReadMask-dummy.obj: dummy.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(TestReadMask_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TestReadMask-dummy.obj -MD -MP -MF $(DEPDIR)/TestReadMask-dummy.Tpo -c -o TestReadMask-dummy.obj `if test -f 'dummy.cxx'; then $(CYGPATH_W) 'dummy.cxx'; else $(CYGPATH_W) '$(srcdir)/dummy.cxx'; fi`
	mv -f $(DEPDIR)/TestReadMask-dummy.Tpo $(DEPDIR)/TestReadMask-dummy.Po
#	source='dummy.cxx' object='TestReadMask-dummy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(TestReadMask_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TestReadMask-dummy.obj `if test -f 'dummy.cxx'; then $(CYGPATH_W) 'dummy.cxx'; else $(CYGPATH_W) '$(srcdir)/dummy.cxx'; fi`

quad-dummy.o: dummy.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(quad_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quad-dummy.o -MD -MP -MF $(DEPDIR)/quad-dummy.Tpo -c -o quad-dummy.o `test -f 'dummy.cxx' || echo '$(srcdir)/'`dummy.cxx
	mv -f $(DEPDIR)/quad-dummy.Tpo $(DEPDIR)/quad-dummy.Po
#	source='dummy.cxx' object='quad-dummy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(quad_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quad-dummy.o `test -f 'dummy.cxx' || echo '$(srcdir)/'`dummy.cxx

quad-dummy.obj: dummy.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(quad_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT quad-dummy.obj -MD -MP -MF $(DEPDIR)/quad-dummy.Tpo -c -o quad-dummy.obj `if test -f 'dummy.cxx'; then $(CYGPATH_W) 'dummy.cxx'; else $(CYGPATH_W) '$(srcdir)/dummy.cxx'; fi`
	mv -f $(DEPDIR)/quad-dummy.Tpo $(DEPDIR)/quad-dummy.Po
#	source='dummy.cxx' object='quad-dummy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(quad_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o quad-dummy.obj `if test -f 'dummy.cxx'; then $(CYGPATH_W) 'dummy.cxx'; else $(CYGPATH_W) '$(srcdir)/dummy.cxx'; fi`

.cxx.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

.f.o:
	$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(LTF77COMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS) \
	  $(check_DATA)
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(HEADERS) all-local
installdirs:
	for dir in "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-am check-local \
	clean clean-checkPROGRAMS clean-generic clean-libtool \
	clean-local ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS


all-local:
	@echo
	@if (fmt</dev/null)>/dev/null 2>&1;then fmt="fmt -70";else fmt=cat;fi;\
	   echo 'Silo test cases are not compiled by default.  To compile and'\
	      'test them run "make check" from the silo "tests" directory.'\
	      'Otherwise you can compile them individually with "make'\
	      'TESTNAME".  The test names are: $(PROGS:=,) but "testall" is'\
	      'a good one to start with.' |\
	   $$fmt | sed 's/^/NOTICE: /'
	@echo

#
# Autotest targets.
# Since we run testsuite multiple times in different 'modes', we
# need some extra logic to contatentate all the results into a
# single, final testsuite.log.
# ATARGS = args to testsuite (autotest) script itself.
# STARGS = args to silo tests.
# By default, with no special args, we run the testsuite twice,
# first on PDB driver and then on HDF5 driver.
check-local: $(TESTSUITE) $(PROGS)
	$(SHELL) $(srcdir)/testsuite PYTHON="$(PYTHON)" BROWSER="$(BROWSER)" STARGS="$(STARGS)" $(ATARGS)
	@if test -e testsuite.log; then \
	    cp testsuite.log testsuite.log.pdb ; \
	fi
#	@if test -z "$(STARGS)"; then \
#	    $(SHELL) $(srcdir)/testsuite PYTHON="$(PYTHON)" BROWSER="$(BROWSER)" STARGS=DB_PDBP $(ATARGS); \
#	    if test -e testsuite.log; then \
#	        cp testsuite.log testsuite.log.pdbp ; \
#	    fi \
#	fi
#	@if test -z "$(STARGS)"; then \
#	    $(SHELL) $(srcdir)/testsuite PYTHON="$(PYTHON)" BROWSER="$(BROWSER)" STARGS=DB_HDF5 $(ATARGS); \
#	    if test -e testsuite.log; then \
#	        cp testsuite.log testsuite.log.hdf5; \
#	    fi \
#	fi
	@rm -f testsuite.log
	@if test -e testsuite.log.pdb; then \
	    cat testsuite.log.pdb >> testsuite.log ; \
	fi
	@if test -e testsuite.log.pdbp; then \
	    cat testsuite.log.pdbp >> testsuite.log ; \
	fi
	@if test -e testsuite.log.hdf5; then \
	    cat testsuite.log.hdf5 >> testsuite.log ; \
	fi

clean-local:
	rm -f testsuite.log
	rm -rf testsuite.dir

testsuite: $(srcdir)/testsuite.at $(top_srcdir)/VERSION
	$(AUTOTEST) -I $(srcdir) $@.at -o $@.tmp
	-mv -f $@.tmp $@

$(srcdir)/package.m4: $(top_srcdir)/configure.ac $(top_srcdir)/VERSION
	{					\
	  echo '# Signature of the current package.'; \
	  echo 'm4_define([AT_PACKAGE_NAME],      [silo])'; \
	  echo 'm4_define([AT_PACKAGE_TARNAME],   [silo])'; \
	  echo 'm4_define([AT_PACKAGE_VERSION],   [4.8])'; \
	  echo 'm4_define([AT_PACKAGE_STRING],    [silo 4.8])'; \
	  echo 'm4_define([AT_PACKAGE_BUGREPORT], [visit-users@email.ornl.gov])'; \
	} >$(srcdir)/package.m4

# deal with the CC=mpicc until I can find a better way
# Mark C. Miller, Sat May 29 08:15:48 PDT 2010
#     put CPPFLAGS ahead of AMCPPFLAGS
resample$(EXEEXT): $(resample_OBJECTS) $(resample_DEPENDENCIES)
	@rm -f resample$(EXEEXT)
	$(LIBTOOL) --tag=CC --mode=link $(MPICC) $(AM_CFLAGS) $(CFLAGS) \
		$(AM_LDFLAGS) $(LDFLAGS) -o $@ $(resample_LDFLAGS) \
		$(resample_OBJECTS) $(resample_LDADD) $(LIBS)
resample.o: resample.c
	$(MPICC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(AM_CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample.o `test -f 'resample.c' || echo '$(srcdir)/'`resample.c
resample.lo: resample.c
	$(LIBTOOL) --tag=CC --mode=compile $(MPICC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(AM_CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $@ $<

tests: $(PROGS)

# Single rule to capture anything put into check_DATA or check_SCRIPTS
# this assumes the only action necessary to create is a copy
checksums: copy_cksd
copy_cksd:
	@for f in $(check_SCRIPTS) $(check_DATA); do \
	    if test ! -e $$f ; then \
	        cp $(srcdir)/$$f . ;\
	    fi ;\
	done
	touch $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
